name: CI

on:
  push:
    branches:
      - "**"
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest

  docker:
    runs-on: ubuntu-latest
    needs: tests
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/arm/v7,linux/arm64,linux/amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DEPLOY_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          load: false
          tags: ghcr.io/osadchii/lang-teacher-agent:latest
          platforms: linux/amd64,linux/arm64

  deploy:
    runs-on: ubuntu-latest
    needs: docker
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure remote directory exists
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.RPI_HOST }}
          port: ${{ secrets.RPI_PORT }}
          username: ${{ secrets.RPI_USER }}
          key: ${{ secrets.RPI_SSH_KEY }}
          script: |
            mkdir -p /opt/lang-teacher

      - name: Copy deployment artifacts
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.RPI_HOST }}
          port: ${{ secrets.RPI_PORT }}
          username: ${{ secrets.RPI_USER }}
          key: ${{ secrets.RPI_SSH_KEY }}
          source: "docker-compose.yml,.env.example,static"
          target: "/opt/lang-teacher"

      - name: Apply docker compose release
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.RPI_HOST }}
          port: ${{ secrets.RPI_PORT }}
          username: ${{ secrets.RPI_USER }}
          key: ${{ secrets.RPI_SSH_KEY }}
          script: |
            set -eu
            cd /opt/lang-teacher
            compose_cmd="docker compose"
            if ! docker compose version >/dev/null 2>&1; then
              if command -v docker-compose >/dev/null 2>&1; then
                compose_cmd="docker-compose"
              else
                echo "Docker Compose is not available" >&2
                exit 1
              fi
            fi
            $compose_cmd pull || true
            $compose_cmd up -d
